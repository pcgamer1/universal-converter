{
	"info": {
		"_postman_id": "f56b0316-7741-4dc4-8c67-0389637ca564",
		"name": "Swagger Petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pets",
			"item": [
				{
					"name": "List all pets",
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "random variable",
								"key": "variable",
								"value": "<string>,<string>"
							}
						],
						"url": {
							"raw": "http://petstore3.swagger.io/:v3/pets?limit=<integer>&variable2=<long>%20<long>",
							"protocol": "http",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								":v3",
								"pets"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "How many items to return at one time (max 100)"
								},
								{
									"key": "variable2",
									"value": "<long>%20<long>",
									"description": "another random variable"
								}
							],
							"variable": [
								{
									"key": "v3",
									"value": "v6.0",
									"description": "version number (This can only be one of v4.0,v5.0,v6.0)"
								}
							]
						}
					},
					"response": [
						{
							"name": "An paged array of pets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									},
									{
										"description": "random variable",
										"key": "variable",
										"value": "<string>,<string>"
									}
								],
								"url": {
									"raw": "undefined?limit=<integer>&variable2=<long>%20<long>",
									"host": [
										"undefined"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "variable2",
											"value": "<long>%20<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-next",
									"value": "commodo aliqua dolore nostrud",
									"description": "A link to the next page of responses"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 38381981,\n  \"name\": \"irure ad cillum\",\n  \"tag\": \"occaecat ipsum officia laborum\"\n },\n {\n  \"id\": -40111650,\n  \"name\": \"amet aute in incididunt\",\n  \"tag\": \"sint in\"\n }\n]"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									},
									{
										"description": "random variable",
										"key": "variable",
										"value": "<string>,<string>"
									}
								],
								"url": {
									"raw": "undefined?limit=<integer>&variable2=<long>%20<long>",
									"host": [
										"undefined"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "variable2",
											"value": "<long>%20<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -59452528,\n \"message\": \"enim\"\n}"
						}
					]
				},
				{
					"name": "/pets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "alternate_statement_descriptors[kana]",
									"value": "<string>"
								},
								{
									"key": "alternate_statement_descriptors[kanji]",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<integer>",
									"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts)."
								},
								{
									"key": "application",
									"value": "<string>"
								},
								{
									"key": "application_fee",
									"value": "<integer>",
									"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees)."
								},
								{
									"key": "capture",
									"value": "<boolean>",
									"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation."
								},
								{
									"key": "card_program",
									"value": "<string>"
								},
								{
									"key": "cross_border_classification",
									"value": "<string>"
								},
								{
									"key": "currency",
									"value": "<string>",
									"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
								},
								{
									"key": "customer",
									"value": "<string>",
									"description": "The ID of an existing customer that will be charged in this request."
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing."
								},
								{
									"key": "destination[account]",
									"value": "<string>",
									"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
								},
								{
									"key": "destination[amount]",
									"value": "<integer>",
									"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
								},
								{
									"key": "device_id",
									"value": "<string>"
								},
								{
									"key": "exchange_rate",
									"value": "<number>"
								},
								{
									"key": "expand[0]",
									"value": "<string>",
									"description": "Specifies which fields in the response should be expanded."
								},
								{
									"key": "expand[1]",
									"value": "<string>",
									"description": "Specifies which fields in the response should be expanded."
								},
								{
									"key": "external_id",
									"value": "<string>"
								},
								{
									"key": "idempotency_key",
									"value": "<string>"
								},
								{
									"key": "include[0]",
									"value": "<string>"
								},
								{
									"key": "include[1]",
									"value": "<string>"
								},
								{
									"key": "invoice",
									"value": "<string>"
								},
								{
									"key": "invoice_source",
									"value": "<string>"
								},
								{
									"key": "ip",
									"value": "<string>"
								},
								{
									"key": "level3[line_items]",
									"value": "[{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"},{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"}]"
								},
								{
									"key": "level3[merchant_reference]",
									"value": "<string>"
								},
								{
									"key": "level3[customer_reference]",
									"value": "<string>"
								},
								{
									"key": "level3[shipping_address_zip]",
									"value": "<string>"
								},
								{
									"key": "level3[shipping_amount]",
									"value": "<integer>"
								},
								{
									"key": "level3[shipping_from_zip]",
									"value": "<string>"
								},
								{
									"key": "on_behalf_of",
									"value": "<string>",
									"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of)."
								},
								{
									"key": "order",
									"value": "<string>"
								},
								{
									"key": "payment_method",
									"value": "<string>"
								},
								{
									"key": "payment_user_agent",
									"value": "<string>"
								},
								{
									"key": "receipt_email",
									"value": "<string>",
									"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails)."
								},
								{
									"key": "recurring",
									"value": "<boolean>"
								},
								{
									"key": "referrer",
									"value": "<string>"
								},
								{
									"key": "shipping[address]",
									"value": "{\"line1\":\"<string>\",\"city\":\"<string>\",\"country\":\"<string>\",\"line2\":\"<string>\",\"postal_code\":\"<string>\",\"state\":\"<string>\"}",
									"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
								},
								{
									"key": "shipping[name]",
									"value": "<string>",
									"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
								},
								{
									"key": "shipping[carrier]",
									"value": "<string>",
									"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
								},
								{
									"key": "shipping[phone]",
									"value": "<string>",
									"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
								},
								{
									"key": "shipping[tracking_number]",
									"value": "<string>",
									"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
								},
								{
									"key": "statement_address[city]",
									"value": "<string>"
								},
								{
									"key": "statement_address[line1]",
									"value": "<string>"
								},
								{
									"key": "statement_address[postal_code]",
									"value": "<string>"
								},
								{
									"key": "statement_address[state]",
									"value": "<string>"
								},
								{
									"key": "statement_address[line2]",
									"value": "<string>"
								},
								{
									"key": "transfer_group",
									"value": "<string>",
									"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions)."
								},
								{
									"key": "uncaptured",
									"value": "<boolean>"
								},
								{
									"key": "user_agent",
									"value": "<string>"
								}
							]
						},
						"url": {
							"raw": "{{pets-Url}}/pets?limit=<string>",
							"host": [
								"{{pets-Url}}"
							],
							"path": [
								"pets"
							],
							"query": [
								{
									"key": "limit",
									"value": "<string>",
									"description": "path level query param"
								}
							]
						}
					},
					"response": [
						{
							"name": "Null response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "alternate_statement_descriptors[kana]",
											"value": "<string>"
										},
										{
											"key": "alternate_statement_descriptors[kanji]",
											"value": "<string>"
										},
										{
											"key": "amount",
											"value": "<integer>",
											"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts)."
										},
										{
											"key": "application",
											"value": "<string>"
										},
										{
											"key": "application_fee",
											"value": "<integer>",
											"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees)."
										},
										{
											"key": "capture",
											"value": "<boolean>",
											"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation."
										},
										{
											"key": "card_program",
											"value": "<string>"
										},
										{
											"key": "cross_border_classification",
											"value": "<string>"
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "customer",
											"value": "<string>",
											"description": "The ID of an existing customer that will be charged in this request."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing."
										},
										{
											"key": "destination[account]",
											"value": "<string>",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "destination[amount]",
											"value": "<integer>",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "device_id",
											"value": "<string>"
										},
										{
											"key": "exchange_rate",
											"value": "<number>"
										},
										{
											"key": "expand[0]",
											"value": "<string>",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "<string>",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "external_id",
											"value": "<string>"
										},
										{
											"key": "idempotency_key",
											"value": "<string>"
										},
										{
											"key": "include[0]",
											"value": "<string>"
										},
										{
											"key": "include[1]",
											"value": "<string>"
										},
										{
											"key": "invoice",
											"value": "<string>"
										},
										{
											"key": "invoice_source",
											"value": "<string>"
										},
										{
											"key": "ip",
											"value": "<string>"
										},
										{
											"key": "level3[line_items]",
											"value": "[{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"},{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"}]"
										},
										{
											"key": "level3[merchant_reference]",
											"value": "<string>"
										},
										{
											"key": "level3[customer_reference]",
											"value": "<string>"
										},
										{
											"key": "level3[shipping_address_zip]",
											"value": "<string>"
										},
										{
											"key": "level3[shipping_amount]",
											"value": "<integer>"
										},
										{
											"key": "level3[shipping_from_zip]",
											"value": "<string>"
										},
										{
											"key": "on_behalf_of",
											"value": "<string>",
											"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of)."
										},
										{
											"key": "order",
											"value": "<string>"
										},
										{
											"key": "payment_method",
											"value": "<string>"
										},
										{
											"key": "payment_user_agent",
											"value": "<string>"
										},
										{
											"key": "receipt_email",
											"value": "<string>",
											"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails)."
										},
										{
											"key": "recurring",
											"value": "<boolean>"
										},
										{
											"key": "referrer",
											"value": "<string>"
										},
										{
											"key": "shipping[address]",
											"value": "{\"line1\":\"<string>\",\"city\":\"<string>\",\"country\":\"<string>\",\"line2\":\"<string>\",\"postal_code\":\"<string>\",\"state\":\"<string>\"}",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[name]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[carrier]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[phone]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[tracking_number]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "statement_address[city]",
											"value": "<string>"
										},
										{
											"key": "statement_address[line1]",
											"value": "<string>"
										},
										{
											"key": "statement_address[postal_code]",
											"value": "<string>"
										},
										{
											"key": "statement_address[state]",
											"value": "<string>"
										},
										{
											"key": "statement_address[line2]",
											"value": "<string>"
										},
										{
											"key": "transfer_group",
											"value": "<string>",
											"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions)."
										},
										{
											"key": "uncaptured",
											"value": "<boolean>"
										},
										{
											"key": "user_agent",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{pets-Url}}/pets?limit=<string>",
									"host": [
										"{{pets-Url}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "alternate_statement_descriptors[kana]",
											"value": "<string>"
										},
										{
											"key": "alternate_statement_descriptors[kanji]",
											"value": "<string>"
										},
										{
											"key": "amount",
											"value": "<integer>",
											"description": "A positive integer representing how much to charge, in the [smallest currency unit](/docs/currencies#zero-decimal) (e.g., `100` cents to charge $1.00, or `100` to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 USD or [equivalent in charge currency](/docs/currencies#minimum-and-maximum-charge-amounts)."
										},
										{
											"key": "application",
											"value": "<string>"
										},
										{
											"key": "application_fee",
											"value": "<integer>",
											"description": "A fee in %s that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](/docs/connect/direct-charges#collecting-fees)."
										},
										{
											"key": "capture",
											"value": "<boolean>",
											"description": "Whether to immediately capture the charge. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](#capture_charge) later. Uncaptured charges expire in _seven days_. For more information, see the [authorizing charges and settling later](/docs/charges#auth-and-capture) documentation."
										},
										{
											"key": "card_program",
											"value": "<string>"
										},
										{
											"key": "cross_border_classification",
											"value": "<string>"
										},
										{
											"key": "currency",
											"value": "<string>",
											"description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
										},
										{
											"key": "customer",
											"value": "<string>",
											"description": "The ID of an existing customer that will be charged in this request."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing."
										},
										{
											"key": "destination[account]",
											"value": "<string>",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "destination[amount]",
											"value": "<integer>",
											"description": "If specified, the charge will be attributed to the destination account for tax reporting, and the funds from the charge will be transferred to the destination account. The ID of the resulting transfer will be returned in the response's `transfer` field. For details, see [Creating Destination Charges on Your Platform](/docs/connect/destination-charges)."
										},
										{
											"key": "device_id",
											"value": "<string>"
										},
										{
											"key": "exchange_rate",
											"value": "<number>"
										},
										{
											"key": "expand[0]",
											"value": "<string>",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "expand[1]",
											"value": "<string>",
											"description": "Specifies which fields in the response should be expanded."
										},
										{
											"key": "external_id",
											"value": "<string>"
										},
										{
											"key": "idempotency_key",
											"value": "<string>"
										},
										{
											"key": "include[0]",
											"value": "<string>"
										},
										{
											"key": "include[1]",
											"value": "<string>"
										},
										{
											"key": "invoice",
											"value": "<string>"
										},
										{
											"key": "invoice_source",
											"value": "<string>"
										},
										{
											"key": "ip",
											"value": "<string>"
										},
										{
											"key": "level3[line_items]",
											"value": "[{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"},{\"product_code\":\"<string>\",\"product_description\":\"<string>\",\"discount_amount\":\"<integer>\",\"quantity\":\"<integer>\",\"tax_amount\":\"<integer>\",\"unit_cost\":\"<integer>\"}]"
										},
										{
											"key": "level3[merchant_reference]",
											"value": "<string>"
										},
										{
											"key": "level3[customer_reference]",
											"value": "<string>"
										},
										{
											"key": "level3[shipping_address_zip]",
											"value": "<string>"
										},
										{
											"key": "level3[shipping_amount]",
											"value": "<integer>"
										},
										{
											"key": "level3[shipping_from_zip]",
											"value": "<string>"
										},
										{
											"key": "on_behalf_of",
											"value": "<string>",
											"description": "The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](/docs/connect/charges-transfers#on-behalf-of)."
										},
										{
											"key": "order",
											"value": "<string>"
										},
										{
											"key": "payment_method",
											"value": "<string>"
										},
										{
											"key": "payment_user_agent",
											"value": "<string>"
										},
										{
											"key": "receipt_email",
											"value": "<string>",
											"description": "The email address to which this charge's [receipt](/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a customer, the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails)."
										},
										{
											"key": "recurring",
											"value": "<boolean>"
										},
										{
											"key": "referrer",
											"value": "<string>"
										},
										{
											"key": "shipping[address]",
											"value": "{\"line1\":\"<string>\",\"city\":\"<string>\",\"country\":\"<string>\",\"line2\":\"<string>\",\"postal_code\":\"<string>\",\"state\":\"<string>\"}",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[name]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[carrier]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[phone]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "shipping[tracking_number]",
											"value": "<string>",
											"description": "Shipping information for the charge. Helps prevent fraud on charges for physical goods."
										},
										{
											"key": "statement_address[city]",
											"value": "<string>"
										},
										{
											"key": "statement_address[line1]",
											"value": "<string>"
										},
										{
											"key": "statement_address[postal_code]",
											"value": "<string>"
										},
										{
											"key": "statement_address[state]",
											"value": "<string>"
										},
										{
											"key": "statement_address[line2]",
											"value": "<string>"
										},
										{
											"key": "transfer_group",
											"value": "<string>",
											"description": "A string that identifies this transaction as part of a group. For details, see [Grouping transactions](/docs/connect/charges-transfers#grouping-transactions)."
										},
										{
											"key": "uncaptured",
											"value": "<boolean>"
										},
										{
											"key": "user_agent",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{pets-Url}}/pets?limit=<string>",
									"host": [
										"{{pets-Url}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -59452528,\n \"message\": \"enim\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "pet/{pet Id}",
			"item": [
				{
					"name": "show Pet By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<string>",
									"description": "(Required) The id of the pet to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -59452528,\n \"message\": \"enim\"\n}"
						},
						{
							"name": "Expected response to a valid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -86029462,\n  \"name\": \"incididunt laborum ex laboris\",\n  \"tag\": \"velit amet commodo ea ipsum\"\n },\n {\n  \"id\": 12504575,\n  \"name\": \"sit id ut\",\n  \"tag\": \"ullamco\"\n }\n]"
						}
					]
				},
				{
					"name": "Info for a specific pet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<string>",
									"description": "(Required) The id of the pet to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -59452528,\n \"message\": \"enim\"\n}"
						},
						{
							"name": "Expected response to a valid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "api_key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -86029462,\n  \"name\": \"incididunt laborum ex laboris\",\n  \"tag\": \"velit amet commodo ea ipsum\"\n },\n {\n  \"id\": 12504575,\n  \"name\": \"sit id ut\",\n  \"tag\": \"ullamco\"\n }\n]"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "api_key",
				"type": "string"
			},
			{
				"key": "value",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://petstore.swagger.io/v1",
			"type": "string"
		},
		{
			"key": "pets-Url",
			"value": "http://petstore2.swagger.io/v2",
			"type": "string"
		}
	]
}