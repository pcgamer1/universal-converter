{"version":3,"sources":["constants/routes.js","components/Loading.js","components/LandingPage.js","components/ScreenWrapper.js","components/RootRouter.js","App.js","index.js","components/404.js/404.screen.js"],"names":["innerRoutes","Component","lazy","path","name","icon","SyncOutlined","HistoryOutlined","SmileOutlined","Loading","style","display","flexDirection","minHeight","minWidth","alignItems","justifyItems","margin","LoadingOutlined","fontSize","LandingPage","useState","current","setCurrent","title","subTitle","span","onClick","e","console","log","key","selectedKeys","mode","map","route","Item","to","fallback","index","props","toString","ScreenWrapper","routes","RootRouter","App","ReactDOM","render","StrictMode","document","getElementById","NotFound404Screen","className","backgroundImage","height","backgroundPosition"],"mappings":"4NAYaA,EAAc,CACzB,CACEC,UAAWC,gBAAK,kBAAM,uDACtBC,KAAM,WACNC,KAAM,UACNC,KAAM,cAACC,EAAA,EAAD,KAER,CACEL,UAAWC,gBAAK,kBAAM,2CACtBC,KAAM,QACNC,KAAM,mBACNC,KAAM,cAACE,EAAA,EAAD,KAER,CACEN,UAAWC,gBAAK,kBAAM,2CACtBC,KAAM,SACNC,KAAM,QACNC,KAAM,cAACG,EAAA,EAAD,M,mEC1BGC,EAAU,WACrB,OACE,sBACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,UAAW,QACXC,SAAU,QACVC,WAAY,SACZC,aAAc,UAPlB,UAUE,qBAAKN,MAAO,CAACO,OAAQ,QAArB,SACE,cAACC,EAAA,EAAD,CAAiBR,MAAO,CAAES,SAAU,QAEtC,+CCXOC,EAAc,YAA0B,IAAfpB,EAAc,EAAdA,YAAc,EAElBqB,mBAAS,IAFS,mBAEzCC,EAFyC,KAEhCC,EAFgC,KAShD,OACI,qCACE,cAAC,IAAD,UACJ,cAAC,IAAD,CACCC,MAAM,sBACNC,SAAS,oEAGX,eAAC,IAAD,WACK,cAAC,IAAD,CAAKC,KAAQ,IACjB,cAAC,IAAD,CAAMC,QAfY,SAAAC,GAChBC,QAAQC,IAAI,SAAUF,GACtBL,EAAWK,EAAEG,MAaaC,aAAc,CAACV,GAAUW,KAAK,aAA1D,SAEUjC,EAAYkC,KAAI,SAACC,GACf,OACE,cAAC,IAAKC,KAAN,CAA4B/B,KAAM8B,EAAM9B,KAAxC,SACE,cAAC,IAAD,CAAMgC,GAAIF,EAAMhC,KAAhB,SAAuBgC,EAAM/B,QADf+B,EAAM/B,cAQ9B,cAAC,IAAD,CAAKsB,KAAQ,IACb,cAAC,WAAD,CAAUY,SAAU,cAAC,EAAD,IAApB,SACGtC,EAAYkC,KAAI,SAACC,EAAOI,GACvB,OACE,cAAC,IAAD,CAAOpC,KAAI,UAAKgC,EAAMhC,MAAtB,SACE,cAACgC,EAAMlC,UAAP,eAA4CkC,EAAMK,OAA5BD,EAAME,uBCvCnCC,EAAgB,YAAqB,IAAVC,EAAS,EAATA,OACpC,OACI,mCACE,cAAC,EAAD,CACE3C,YAAe2C,OCIdC,EAAa,WACtB,OACI,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOzC,KAAK,IAAZ,SACE,cAAC,EAAD,CAAewC,OAAQ3C,MAEzB,cAAC,IAAD,CAAOG,KAAK,IAAZ,SACE,cAAC,oBAAD,YCVC0C,MARf,WACE,OACE,mCACE,cAAC,EAAD,O,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,gCCT1B,gFAKaC,EAAoB,kBAC/B,sBAAKC,UAAU,YAAf,UACE,qBACEA,UAAU,QACV1C,MAAO,CACL2C,gBACE,gFACFC,OAAQ,QACRC,mBAAoB,YAExB,sBAAKH,UAAU,UAAf,UACE,qCACA,uDAMSD,c","file":"static/js/main.989ffbca.chunk.js","sourcesContent":["import {lazy} from 'react';\nimport {\n  SyncOutlined,\n  HistoryOutlined,\n  SmileOutlined\n} from '@ant-design/icons';\n \n\n// export const publicRoutes = [\n//   {Component: lazy(() => import('../components/LandingPage')), path: '/'},\n// ];\n\nexport const innerRoutes = [\n  {\n    Component: lazy(() => import('../components/Convert')),\n    path: '/convert',\n    name: 'Convert',\n    icon: <SyncOutlined/>\n  },\n  {\n    Component: lazy(() => import('../components/404.js/404.screen')),\n    path: '/past',\n    name: 'Past Conversions',\n    icon: <HistoryOutlined />\n  },\n  {\n    Component: lazy(() => import('../components/404.js/404.screen')),\n    path: '/about',\n    name: 'About',\n    icon: <SmileOutlined />\n  },\n]","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport const Loading = () => {\n  return (\n    <div \n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '100vw',\n        alignItems: 'center',\n        justifyItems: 'center'\n      }}\n    >\n      <div style={{margin: '10px'}}>\n        <LoadingOutlined style={{ fontSize: 30 }} />\n      </div>\n      <p>Loading...</p>\n    </div>\n  );\n};\n","import React, { useState, Suspense } from 'react'\nimport { Menu, Row, Col, PageHeader } from 'antd';\nimport { Link, Route } from 'react-router-dom'\n\nimport {Loading} from './Loading'\n// const { SubMenu } = Menu;\n\nexport const LandingPage = function ({innerRoutes}) {\n\n    const [current, setCurrent] = useState([])\n    \n    const handleClick = e => {\n        console.log('click ', e);\n        setCurrent(e.key)\n    };\n\n    return (\n        <>\n          <Row>\n\t\t\t\t\t\t<PageHeader\n\t\t\t\t\t\t\ttitle=\"Universal Converter\"\n\t\t\t\t\t\t\tsubTitle=\"Your one stop solution for API format and schema conversions.\"\n\t\t\t\t\t\t/>\n          </Row>\n\t\t\t\t\t<Row>\n          <Col span = {8} />\n\t\t\t\t\t\t<Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\n              {\n                innerRoutes.map((route) => {\n                  return (\n                    <Menu.Item key={route.name} icon={route.icon}>\n                      <Link to={route.path}>{route.name}</Link>\n                    </Menu.Item>\n                  )\n                })\n              }\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</Row> \n            <Col span = {8} />\n            <Suspense fallback={<Loading />}>\n              {innerRoutes.map((route, index) => {\n                return (\n                  <Route path={`${route.path}`}>\n                    <route.Component key={index.toString()} {...route.props} />\n                  </Route>\n                )\n              })}\n            </Suspense>\n        </>\n    );\n}","import React, { useState } from 'react'\nimport { Menu, Row, Col, PageHeader } from 'antd';\nimport { LandingPage } from './LandingPage';\n\nexport const ScreenWrapper = function ({routes}) {\n    return (\n        <>\n          <LandingPage\n            innerRoutes = {routes}\n          />\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { Menu, Row, Col, PageHeader } from 'antd';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\n\nimport {innerRoutes} from '../constants/routes'\nimport {NotFound404Screen} from './404.js/404.screen';\nimport {ScreenWrapper} from './ScreenWrapper'\n\nexport const RootRouter = function () {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/'>\n              <ScreenWrapper routes={innerRoutes} />               \n            </Route> \n            <Route path='*'>\n              <NotFound404Screen />\n            </Route>\n          </Switch>\n        </Router>\n    )\n}","import {RootRouter} from './components/RootRouter'\n\nfunction App() {\n  return (\n    <>\n      <RootRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","import React from 'react';\n// import {Button} from 'antd';\n\nimport './404.styles.scss';\n\nexport const NotFound404Screen = () => (\n  <div className=\"container\">\n    <div\n      className=\"image\"\n      style={{\n        backgroundImage:\n          'url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif)',\n        height: '400px',\n        backgroundPosition: 'center',\n      }}></div>\n    <div className=\"content\">\n      <h1>404</h1>\n      <h2>Page Not Found</h2>\n      {/* <Button onClick={() => navigate('/')}>Return To Home</Button> */}\n    </div>\n  </div>\n);\n\nexport default NotFound404Screen;\n"],"sourceRoot":""}